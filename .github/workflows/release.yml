name: Release

on:
  push:
    tags:
    - v*

jobs:
  go-test:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Set up linux dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc libgtk-3-dev libappindicator3-dev

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: go test ./...

  release-matrix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
            exesuffix: .exe
          - os: windows-latest
            goos: windows
            goarch: "386"
            exesuffix: .exe
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: "386"
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Set up linux dependencies
        if: ${{ matrix.goos == 'linux' }}
        run: sudo apt-get update && sudo apt-get install -y gcc libgtk-3-dev libappindicator3-dev

      # stupid cross-platform nonsense:
      - run: echo "basename=sni-${{env.GITHUB_REF_SLUG}}-${{matrix.goos}}-${{matrix.goarch}}" >> $GITHUB_ENV
        if: ${{ matrix.goos != 'windows' }}
      - run: echo "basename=sni-${{env.GITHUB_REF_SLUG}}-${{matrix.goos}}-${{matrix.goarch}}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        if: ${{ matrix.goos == 'windows' }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: |
          mkdir ${{env.basename}}
          cp README.md ${{env.basename}}
          cp LICENSE ${{env.basename}}
          cp protos/sni/sni.proto ${{env.basename}}
          cp cmd/sni/apps.yaml ${{env.basename}}

      - run: >
          go build
          -ldflags="-X 'main.version=${{env.GITHUB_REF_SLUG}}' -X 'main.commit=${{env.GITHUB_SHA_SHORT}}' -X 'main.date=$(date +'%Y-%m-%dT%H:%M:%S')'"
          -o ./${{env.basename}}/sni${{matrix.exesuffix}}
          ./cmd/sni

      # cross-platform tar.gz creator:
      - name: Create ${{env.basename}}.tar.gz
        run: >
          go run
          .github/scripts/tar.go
          -z
          -o ${{env.basename}}.tar.gz
          -strip ${{env.basename}}/
          ${{env.basename}}/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.GITHUB_REF_SLUG }}
          overwrite: true
          asset_name: ${{env.basename}}.tar.gz
          file: ${{ github.workspace }}/${{env.basename}}.tar.gz
